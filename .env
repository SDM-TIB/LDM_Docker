# Variables in this file will be substituted into docker-compose.yml
# Save a copy of this file as .env and insert your own values.
# Verify correct substitution with "docker-compose config"
# If variables are newly added or enabled, please delete and rebuild the images to pull in changes:
# docker-compose down
# docker rmi -f docker_ckan docker_db
# docker rmi $(docker images -f dangling=true -q)
# docker-compose build
# docker-compose up -d
# docker-compose restart ckan # give the db service time to initialize the db cluster on first run

# Image: ckan
CKAN_SITE_ID=default
#
# On AWS, your CKAN_SITE_URL is the output of:
# curl -s http://169.254.169.254/latest/meta-data/public-hostname
# CKAN_SITE_URL=http://ec2-xxx-xxx-xxx-xxx.ap-southeast-2.compute.amazonaws.com
# On OSX with Docker for Mac, your CKAN_SITE_URL is
# CKAN_SITE_URL=http://docker.for.mac.localhost:5000
# When running locally, CKAN_SITE_URL must contain the port
CKAN_SITE_URL=https://service.tib.eu

#
# CKAN_PORT must be available on the host: sudo netstat -na
# To apply change: docker-compose down && docker rmi docker_ckan && docker-compose build ckan
CKAN_PORT=5000
#
# Email settings
CKAN_SMTP_SERVER=smtp.corporateict.domain:25
CKAN_SMTP_STARTTLS=True
CKAN_SMTP_USER=user
CKAN_SMTP_PASSWORD=pass
CKAN_SMTP_MAIL_FROM=ckan@localhost
#
# Image: db
POSTGRES_PASSWORD=ckan
#
# POSTGRES_PORT must be available on the host: sudo netstat -na | grep 5432
# To apply change: docker-compose down && docker rmi docker_db docker_ckan && docker-compose build
POSTGRES_PORT=5432
#
# The datastore database will be created in the db container as docs
# Readwrite user/pass will be ckan:POSTGRES_PASSWORD
# Readonly user/pass will be datastore_ro:DATASTORE_READONLY_PASSWORD
DATASTORE_READONLY_PASSWORD=datastore

# Other CKAN variables
CKAN_HOME=/usr/lib/ckan/default
CKAN_INI=/etc/ckan/default
CKAN_CONFIG=/etc/ckan/default
CKAN_STORAGE_PATH=/var/lib/ckan
CKAN_MAX_UPLOAD_SIZE_MB=104857600
CKAN_MAX_RESOURCE_SIZE=104857600
CKAN_DATASTORE_WRITE_URL=postgresql://ckan:ckan@db:5432/datastore_default
CKAN_DATASTORE_READ_URL=postgresql://datastore_default:datastore@db:5432/datastore_default
CKAN_SQLALCHEMY_URL=postgresql://ckan:ckan@db:5432/ckan

CKAN_VERSION=ckan-2.9.5
   
# Solr config
CKAN_SOLR_URL=http://solr:8983/solr/ckan

# Redis config
CKAN_REDIS_URL=redis://redis:6379/0

# DataPusher config
CKAN_DATAPUSHER_URL=http://datapusher:8800

# JupyterHub variables
CKAN_JUPYTERNOTEBOOK_URL=https://service.tib.eu/ldm_coypu/ldmjupyter/
CKAN_JUPYTERHUB_BASE_URL=/ldm_coypu/ldmjupyter
CKAN_NETWORK=ldmnetwork
CKAN_STORAGE_NOTEBOOK=/data/LDM_Installer/LDM_Docker_Server_Installed/docker/LDM_data/docker_ckan_storage/notebook
CKAN_API_JUPYTERHUB=http://jupyterhub:6000
# Timeout for JupyterHub sessions (timeout in seconds)
CKAN_JUPYTERHUB_TIMEOUT=1200
# The maximum number of concurrent users allowed
CKAN_JUPYTERHUB_USER=100
# The percentage of CPU core allocated to each container
CKAN_JUPYTERHUB_PERCENTAGE_CPU=50
# Limit on the amount of memory that the container can use
CKAN_JUPYTERHUB_MEMORY_LIMIT=1G


# Knowledge Graph variables
#CKAN_KG_DOMAIN=https://research.tib.eu/ldm_resilience_mesh
CKAN_KG_DOMAIN=https://research.tib.eu/ldm
CKAN_POST_URL=/X/X/


### LDM oauth
LDMoauth2_CONSUMER_KEY=XXX
LDMoauth2_CONSUMER_SECRET=XXX
LDMoauth2_BASE_URL=https://gitlab.com/api/v3/
LDMoauth2_ACCESS_TOKEN_URL=https://gitlab.com/oauth/token
LDMoauth2_AUTHORIZE_URL=https://gitlab.com/oauth/authorize
LDMoauth2_SCOPE=read_user profile email