{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5348020f",
   "metadata": {},
   "source": [
    "# Leibniz Data Manager\n",
    "\n",
    "## REST-API Reference\n",
    "\n",
    "##### This notebook documents LDM’s API (CKAN), for developers who want to write code that interacts with LDM sites and their data.\n",
    "\n",
    "##### LDM’s Action API (CKAN) is a powerful, RPC-style API that exposes all of CKAN’s core features to API clients. All of a CKAN website’s core functionality (everything you can do with the web interface and more) can be used by external code that calls the CKAN API.\n",
    "\n",
    "##### For more details and a complete list of API calls available visit the CKAN's <a href=\"https://docs.ckan.org/en/2.9/api/#api-guide\" target=\"_blank\">\"API Guide\":</a>\"API Guide\"\n",
    "\n",
    "##### The following examples demonstrate by using python code scripts how to use LDM's REST API for retrieving and manipulating data and content over an instance of LDM. \n",
    "\n",
    "-----"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d45620b",
   "metadata": {},
   "source": [
    "##### <u>SUMMARY:</u>\n",
    "\n",
    "> - Example 1: List Organizations\n",
    ">\n",
    "> - Example 2: List Public Datasets\n",
    "> - Example 3: Show Organization's data\n",
    "> - Example 4: Show Dataset's data\n",
    "> - Example 5: Search Datasets\n",
    "> - Example 6: Setting user token to perform privileged operations (Example: Create Organization)\n",
    "> - Example 7: Create Dataset\n",
    "> - Example 8: Show Private Dataset's data\n",
    "> - Example 9: Create User\n",
    "> - Example 10: Upload a Dataset\n",
    "> - Example 11: Download a Dataset\n",
    "\n",
    "-----"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d83e31c",
   "metadata": {},
   "source": [
    "##### <u>API URL:</u>\n",
    "\n",
    "###### The API URL is accessible in $<$LDM_SITE_URL$>$/api/3/action/$<$API_ACTION$>$, for example:\n",
    "\n",
    "######  https://service.tib.eu/ldmservice/api/3/action/organization_list\n",
    "\n",
    "-----"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8b37a1d",
   "metadata": {},
   "source": [
    "##### <u>Setting environment for all examples</u>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "54321add",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "API_Base_URL = \"http://localhost:5000/api/3/action/\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a568af87",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 1: List Organizations</u></h3>\n",
    "\n",
    "###### List of organization's names (IDs) available in LDM instance:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e45f1911",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/organization_list\n",
      "Method: GET\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"organization_list\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: GET\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a81fb759",
   "metadata": {},
   "outputs": [],
   "source": [
    "try:\n",
    "    response = requests.get(API_URL)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "510c337f",
   "metadata": {},
   "source": [
    "##### Showing first  5 results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4d76a75e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ag-palm',\n",
       " 'institut-fur-geologie',\n",
       " 'institut-fur-umweltplanung',\n",
       " 'pangea',\n",
       " 'radar']"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "organizations = response.json().get('result')\n",
    "organizations[0:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08d7e1de",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 2: List public Datasets</u></h3>\n",
    "\n",
    "###### List of Datasets's names (IDs) available in LDM instance:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "608c686d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/package_list\n",
      "Method: GET\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"package_list\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: GET\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a8f6282b",
   "metadata": {},
   "outputs": [],
   "source": [
    "try:\n",
    "    response = requests.get(API_URL)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f77ed67c",
   "metadata": {},
   "source": [
    "\n",
    "##### Showing first  5 results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "956eaf9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['data-service-example-jupyternotebook',\n",
       " 'example-cad',\n",
       " 'example-data-formats-visualizations',\n",
       " 'example-documents-visualizations',\n",
       " 'example-ldm-api-implementation']"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "datasets = response.json().get('result')\n",
    "datasets[0:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7ec0f7b",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 3: Show Organization's data</u></h3>\n",
    "\n",
    "###### List metadata from a particular Organization by its name (ID):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "fc24b2c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/organization_show\n",
      "Method: GET\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"organization_show\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: GET\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "82e43e57",
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {\"id\": \"tib\"}\n",
    "try:\n",
    "    response = requests.get(API_URL, params = params)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b7668c6",
   "metadata": {},
   "source": [
    "\n",
    "##### Showing results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a16de9b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'approval_status': 'approved',\n",
       " 'created': '2017-11-23T17:30:37.757128',\n",
       " 'description': 'The German National Library of Science and Technology, abbreviated TIB, is the national library of the Federal Republic of Germany for all fields of engineering, technology, and the natural sciences.',\n",
       " 'display_name': 'TIB',\n",
       " 'id': '0c5362f5-b99e-41db-8256-3d0d7549bf4d',\n",
       " 'image_display_url': 'https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/images/TIB_Logo_en.png',\n",
       " 'image_url': 'https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/images/TIB_Logo_en.png',\n",
       " 'is_organization': True,\n",
       " 'name': 'tib',\n",
       " 'num_followers': 0,\n",
       " 'package_count': 7,\n",
       " 'state': 'active',\n",
       " 'title': 'TIB',\n",
       " 'type': 'organization',\n",
       " 'users': [{'about': None,\n",
       "   'activity_streams_email_notifications': False,\n",
       "   'capacity': 'admin',\n",
       "   'created': '2017-08-08T16:45:41.109676',\n",
       "   'display_name': 'admin',\n",
       "   'email_hash': '59235f35e4763abb0b547bd093562f6e',\n",
       "   'fullname': None,\n",
       "   'id': '17755db4-395a-4b3b-ac09-e8e3484ca700',\n",
       "   'image_display_url': None,\n",
       "   'image_url': None,\n",
       "   'name': 'admin',\n",
       "   'number_created_packages': 18,\n",
       "   'state': 'active',\n",
       "   'sysadmin': True}],\n",
       " 'extras': [],\n",
       " 'tags': [],\n",
       " 'groups': []}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "organization = response.json().get('result')\n",
    "organization"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd333812",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 4: Show Dataset's data</u></h3>\n",
    "\n",
    "###### List metadata from a particular public Dataset by its name (ID):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "975688f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/package_show\n",
      "Method: GET\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"package_show\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: GET\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "763b09f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'data-service-example-jupyternotebook'"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset_ID = datasets[0]\n",
    "dataset_ID"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "764a9339",
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {\"id\": dataset_ID}\n",
    "try:\n",
    "    response = requests.get(API_URL, params = params)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3601ba8a",
   "metadata": {},
   "source": [
    "\n",
    "##### Showing results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8636c53b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'author': 'John Doe',\n",
       " 'author_email': '',\n",
       " 'creator_user_id': '17755db4-395a-4b3b-ac09-e8e3484ca700',\n",
       " 'datasets_served_list': '',\n",
       " 'id': 'ed56c026-3d32-41d5-9d11-2aa655cb8052',\n",
       " 'isopen': False,\n",
       " 'license_id': 'notspecified',\n",
       " 'license_title': 'License not specified',\n",
       " 'maintainer': '',\n",
       " 'maintainer_email': '',\n",
       " 'metadata_created': '2022-03-16T09:43:34.017574',\n",
       " 'metadata_modified': '2022-06-13T07:05:36.730841',\n",
       " 'name': 'data-service-example-jupyternotebook',\n",
       " 'notes': 'This is a Data-Service example performing a data exploration process using a jupyter notebook running live code over the CSV file inside the same dataset. ',\n",
       " 'num_resources': 2,\n",
       " 'num_tags': 0,\n",
       " 'orcid': '',\n",
       " 'organization': {'id': '0c5362f5-b99e-41db-8256-3d0d7549bf4d',\n",
       "  'name': 'tib',\n",
       "  'title': 'TIB',\n",
       "  'type': 'organization',\n",
       "  'description': 'The German National Library of Science and Technology, abbreviated TIB, is the national library of the Federal Republic of Germany for all fields of engineering, technology, and the natural sciences.',\n",
       "  'image_url': 'https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/images/TIB_Logo_en.png',\n",
       "  'created': '2017-11-23T17:30:37.757128',\n",
       "  'is_organization': True,\n",
       "  'approval_status': 'approved',\n",
       "  'state': 'active'},\n",
       " 'owner_org': '0c5362f5-b99e-41db-8256-3d0d7549bf4d',\n",
       " 'private': False,\n",
       " 'state': 'active',\n",
       " 'title': 'Data-Service example (JupyterNotebook)',\n",
       " 'type': 'service',\n",
       " 'url': '',\n",
       " 'version': '',\n",
       " 'extra_authors': [{'extra_author': '', 'orcid': ''}],\n",
       " 'extras': [{'__extras': {'id': 'd12eb6f2-7c84-4e70-b656-0b55b9689125',\n",
       "    'package_id': 'ed56c026-3d32-41d5-9d11-2aa655cb8052',\n",
       "    'state': 'active'},\n",
       "   'key': '',\n",
       "   'value': ''}],\n",
       " 'resources': [{'cache_last_updated': None,\n",
       "   'cache_url': None,\n",
       "   'created': '2022-03-16T09:47:36.683662',\n",
       "   'datastore_active': False,\n",
       "   'description': 'This is a sample dataset for demonstration purposes.',\n",
       "   'format': 'CSV',\n",
       "   'hash': '',\n",
       "   'id': '4d288ebb-9f2f-40fb-9feb-d0dbffa2f4b7',\n",
       "   'last_modified': '2022-03-16T09:47:36.672500',\n",
       "   'metadata_modified': '2022-03-16T09:48:33.163961',\n",
       "   'mimetype': 'text/csv',\n",
       "   'mimetype_inner': None,\n",
       "   'name': 'Cars data',\n",
       "   'package_id': 'ed56c026-3d32-41d5-9d11-2aa655cb8052',\n",
       "   'position': 0,\n",
       "   'resource_type': None,\n",
       "   'size': 1475504,\n",
       "   'state': 'active',\n",
       "   'url': 'https://service.tib.eu/ldmservice/dataset/672f2339-c57f-48f5-a681-b62acc50f488/resource/22312cbf-7a7a-4510-88b5-8a1a828f3064/download/data.csv',\n",
       "   'url_type': ''},\n",
       "  {'auto_update': 'No',\n",
       "   'auto_update_url': '',\n",
       "   'cache_last_updated': None,\n",
       "   'cache_url': None,\n",
       "   'created': '2022-03-16T09:50:33.036016',\n",
       "   'description': 'This jupyter notebook runs live code over the cars.cvd data present in the same dataset.',\n",
       "   'format': 'ipynb',\n",
       "   'hash': '',\n",
       "   'id': '5c653296-8877-42f4-9dee-84de4784dcca',\n",
       "   'last_modified': '2022-03-16T09:50:33.020919',\n",
       "   'metadata_modified': '2022-03-16T09:52:16.210277',\n",
       "   'mimetype': None,\n",
       "   'mimetype_inner': None,\n",
       "   'name': 'Exploratory Data Analisys of Cars',\n",
       "   'package_id': 'ed56c026-3d32-41d5-9d11-2aa655cb8052',\n",
       "   'position': 1,\n",
       "   'resource_type': None,\n",
       "   'size': 199131,\n",
       "   'state': 'active',\n",
       "   'url': 'http://localhost:5000/dataset/ed56c026-3d32-41d5-9d11-2aa655cb8052/resource/5c653296-8877-42f4-9dee-84de4784dcca/download/exploratory_data_analysis.ipynb',\n",
       "   'url_type': 'upload'}],\n",
       " 'tags': [],\n",
       " 'groups': [],\n",
       " 'relationships_as_subject': [],\n",
       " 'relationships_as_object': []}"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset = response.json().get('result')\n",
    "dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18a9d518",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 5: Search Datasets</u></h3>\n",
    "\n",
    "###### List Datasets performing a query:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3c9378a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/package_search\n",
      "Method: GET\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"package_search\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: GET\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f554b1e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Ecample: Searching datasets bellowing to TIB organization, \n",
    "#          ordering results by Organization name alphabetical,\n",
    "#          and limiting the results to 2 rows\n",
    "params = {\"fq\": \"type:dataset +organization:tib\",\n",
    "          \"sort\": \"organization asc,title_string asc\",\n",
    "          \"rows\": 2}\n",
    "try:\n",
    "    response = requests.get(API_URL, params = params)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d629f7d9",
   "metadata": {},
   "source": [
    "\n",
    "##### Showing results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ca7a29ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'count': 5,\n",
       " 'facets': {},\n",
       " 'results': [{'author': 'Autodesk',\n",
       "   'author_email': '',\n",
       "   'creator_user_id': '17755db4-395a-4b3b-ac09-e8e3484ca700',\n",
       "   'id': '476cdf71-1048-4a6f-a28a-58fff547dae5',\n",
       "   'isopen': True,\n",
       "   'license_id': 'cc-by',\n",
       "   'license_title': 'Creative Commons Attribution',\n",
       "   'license_url': 'http://www.opendefinition.org/licenses/cc-by',\n",
       "   'maintainer': '',\n",
       "   'maintainer_email': '',\n",
       "   'metadata_created': '2017-11-23T17:37:00.362900',\n",
       "   'metadata_modified': '2022-06-13T06:54:09.827455',\n",
       "   'name': 'example-cad',\n",
       "   'notes': 'Example usage of CAD visualization in 2D and 3D using CKAN Views.',\n",
       "   'num_resources': 3,\n",
       "   'num_tags': 6,\n",
       "   'orcid': '',\n",
       "   'organization': {'id': '0c5362f5-b99e-41db-8256-3d0d7549bf4d',\n",
       "    'name': 'tib',\n",
       "    'title': 'TIB',\n",
       "    'type': 'organization',\n",
       "    'description': 'The German National Library of Science and Technology, abbreviated TIB, is the national library of the Federal Republic of Germany for all fields of engineering, technology, and the natural sciences.',\n",
       "    'image_url': 'https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/images/TIB_Logo_en.png',\n",
       "    'created': '2017-11-23T17:30:37.757128',\n",
       "    'is_organization': True,\n",
       "    'approval_status': 'approved',\n",
       "    'state': 'active'},\n",
       "   'owner_org': '0c5362f5-b99e-41db-8256-3d0d7549bf4d',\n",
       "   'private': False,\n",
       "   'services_used_list': '',\n",
       "   'state': 'active',\n",
       "   'title': 'Example CAD Visualizations',\n",
       "   'type': 'dataset',\n",
       "   'url': 'https://knowledge.autodesk.com/support/autocad/downloads/caas/downloads/content/autocad-sample-files.html',\n",
       "   'version': '',\n",
       "   'extras': [{'__extras': {'id': 'adf12ac1-5e68-45ca-8adc-10a50e8f7deb',\n",
       "      'package_id': '476cdf71-1048-4a6f-a28a-58fff547dae5',\n",
       "      'state': 'active'},\n",
       "     'key': 'foobar',\n",
       "     'value': 'baz'}],\n",
       "   'resources': [{'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2017-11-23T17:37:19.897441',\n",
       "     'datastore_active': False,\n",
       "     'description': '',\n",
       "     'format': '',\n",
       "     'hash': '',\n",
       "     'id': '4ee0ec1c-c72b-4bad-be73-364a735cea5c',\n",
       "     'last_modified': '2022-03-16T07:53:55.475515',\n",
       "     'metadata_modified': '2022-05-10T06:16:16.473844',\n",
       "     'mimetype': None,\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'Example 2D .dwg file',\n",
       "     'package_id': '476cdf71-1048-4a6f-a28a-58fff547dae5',\n",
       "     'position': 0,\n",
       "     'resource_type': None,\n",
       "     'size': 169807,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/c31c9ff2-0ea9-43d8-8f93-2af0eaade9d4/resource/4c0009c0-69f2-49ec-831c-181f97d624a5/download/drive_shaft.dwg',\n",
       "     'url_type': ''},\n",
       "    {'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2017-11-23T17:40:23.217872',\n",
       "     'datastore_active': False,\n",
       "     'description': '',\n",
       "     'format': '',\n",
       "     'hash': '',\n",
       "     'id': '1342ec64-f18e-4860-93cc-f6dd194d56ec',\n",
       "     'last_modified': '2022-03-16T07:54:28.325436',\n",
       "     'metadata_modified': '2022-05-10T06:16:58.409296',\n",
       "     'mimetype': None,\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'Example 3D .dwg file',\n",
       "     'package_id': '476cdf71-1048-4a6f-a28a-58fff547dae5',\n",
       "     'position': 1,\n",
       "     'resource_type': None,\n",
       "     'size': 733036,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/c31c9ff2-0ea9-43d8-8f93-2af0eaade9d4/resource/6b12f482-7693-4e36-9f47-fa0d4e03a5dc/download/visualization_-_aerial.dwg',\n",
       "     'url_type': ''},\n",
       "    {'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2022-03-16T07:50:19.425337',\n",
       "     'datastore_active': False,\n",
       "     'description': 'Example usage of CAD using Ckan View with information provided by PANGAEA.',\n",
       "     'format': 'ZIP',\n",
       "     'hash': '',\n",
       "     'id': 'ade79b5d-14e3-4d08-a556-2135fee359f4',\n",
       "     'last_modified': '2022-03-16T07:50:19.388180',\n",
       "     'metadata_modified': '2022-05-10T06:19:53.347017',\n",
       "     'mimetype': None,\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'PANGEA CAD example',\n",
       "     'package_id': '476cdf71-1048-4a6f-a28a-58fff547dae5',\n",
       "     'position': 2,\n",
       "     'resource_type': None,\n",
       "     'size': 3414733,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/c31c9ff2-0ea9-43d8-8f93-2af0eaade9d4/resource/3f429389-27fa-4bac-a677-1c989882b06f/download/g12_0020_100_5_5_grosskaste.dwg',\n",
       "     'url_type': ''}],\n",
       "   'tags': [{'display_name': '2D',\n",
       "     'id': 'aa5643c3-51ea-4233-a672-6f5a2a7b174e',\n",
       "     'name': '2D',\n",
       "     'state': 'active',\n",
       "     'vocabulary_id': None},\n",
       "    {'display_name': '3D',\n",
       "     'id': 'c98a3ca2-e5c9-4173-93fb-420e0b48e9d8',\n",
       "     'name': '3D',\n",
       "     'state': 'active',\n",
       "     'vocabulary_id': None},\n",
       "    {'display_name': 'CAD',\n",
       "     'id': '80b88538-5f29-4c5f-af29-895228232a10',\n",
       "     'name': 'CAD',\n",
       "     'state': 'active',\n",
       "     'vocabulary_id': None},\n",
       "    {'display_name': 'dwg',\n",
       "     'id': '675a1366-8d81-4e07-ab30-8c492c34b91d',\n",
       "     'name': 'dwg',\n",
       "     'state': 'active',\n",
       "     'vocabulary_id': None},\n",
       "    {'display_name': 'example',\n",
       "     'id': '73142a8e-6efc-400b-9215-3316931a4e66',\n",
       "     'name': 'example',\n",
       "     'state': 'active',\n",
       "     'vocabulary_id': None},\n",
       "    {'display_name': 'visualization',\n",
       "     'id': '7ffd8f1d-b342-4349-aee9-a1d5aae5d2bd',\n",
       "     'name': 'visualization',\n",
       "     'state': 'active',\n",
       "     'vocabulary_id': None}],\n",
       "   'groups': [],\n",
       "   'relationships_as_subject': [],\n",
       "   'relationships_as_object': []},\n",
       "  {'author': 'John Doe',\n",
       "   'author_email': '',\n",
       "   'creator_user_id': '17755db4-395a-4b3b-ac09-e8e3484ca700',\n",
       "   'id': 'd5d29173-addc-4e4d-af7b-59e3b147c817',\n",
       "   'isopen': False,\n",
       "   'license_id': 'notspecified',\n",
       "   'license_title': 'License not specified',\n",
       "   'maintainer': '',\n",
       "   'maintainer_email': '',\n",
       "   'metadata_created': '2022-03-16T09:17:57.266750',\n",
       "   'metadata_modified': '2022-06-13T06:58:55.023676',\n",
       "   'name': 'example-data-formats-visualizations',\n",
       "   'notes': 'This is an example Dataset showing visualizations for data in different formats.',\n",
       "   'num_resources': 6,\n",
       "   'num_tags': 0,\n",
       "   'orcid': '',\n",
       "   'organization': {'id': '0c5362f5-b99e-41db-8256-3d0d7549bf4d',\n",
       "    'name': 'tib',\n",
       "    'title': 'TIB',\n",
       "    'type': 'organization',\n",
       "    'description': 'The German National Library of Science and Technology, abbreviated TIB, is the national library of the Federal Republic of Germany for all fields of engineering, technology, and the natural sciences.',\n",
       "    'image_url': 'https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/images/TIB_Logo_en.png',\n",
       "    'created': '2017-11-23T17:30:37.757128',\n",
       "    'is_organization': True,\n",
       "    'approval_status': 'approved',\n",
       "    'state': 'active'},\n",
       "   'owner_org': '0c5362f5-b99e-41db-8256-3d0d7549bf4d',\n",
       "   'private': False,\n",
       "   'services_used_list': '',\n",
       "   'state': 'active',\n",
       "   'title': 'Example Data Formats Visualizations',\n",
       "   'type': 'dataset',\n",
       "   'url': '',\n",
       "   'version': '',\n",
       "   'extra_authors': [{'extra_author': '', 'orcid': ''}],\n",
       "   'extras': [{'__extras': {'id': 'c7742f16-7299-48b5-88d5-324f501dfdfb',\n",
       "      'package_id': 'd5d29173-addc-4e4d-af7b-59e3b147c817',\n",
       "      'state': 'active'},\n",
       "     'key': '',\n",
       "     'value': ''}],\n",
       "   'resources': [{'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2022-03-16T09:22:41.213753',\n",
       "     'datastore_active': False,\n",
       "     'description': 'All data are analysed and published 2020 under the title \"Banker plants promote functional biodiversity and decrease populations of the cabbage whitefly Aleyrodes proletella\".\\r\\nThis dataset was published by Leibniz University Hannover.',\n",
       "     'format': 'CSV',\n",
       "     'hash': '',\n",
       "     'id': 'fece58b1-1505-4ef0-befb-3f0edf59335d',\n",
       "     'last_modified': '2022-03-16T09:22:41.200122',\n",
       "     'metadata_modified': '2022-06-13T06:56:06.862691',\n",
       "     'mimetype': 'text/csv',\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'CSV Data Example',\n",
       "     'package_id': 'd5d29173-addc-4e4d-af7b-59e3b147c817',\n",
       "     'position': 0,\n",
       "     'resource_type': None,\n",
       "     'size': 2017,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/abe34d5b-89dc-45a6-ace3-edef03a98e25/resource/0e5f5646-65a4-42af-a4e5-92f5dbbf4f96/download/1-laurenz_meyhoefer_a.-proletella-performance.csv',\n",
       "     'url_type': ''},\n",
       "    {'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2022-03-16T09:26:47.719119',\n",
       "     'datastore_active': False,\n",
       "     'description': 'This is a XML file published by Leibniz University Hannover.',\n",
       "     'format': 'XML',\n",
       "     'hash': '',\n",
       "     'id': '1fb543eb-9980-494e-bd3b-26aa99bc06ef',\n",
       "     'last_modified': '2022-03-16T09:26:47.705015',\n",
       "     'metadata_modified': '2022-06-13T06:56:58.327548',\n",
       "     'mimetype': 'application/xml',\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'XML Data Example',\n",
       "     'package_id': 'd5d29173-addc-4e4d-af7b-59e3b147c817',\n",
       "     'position': 1,\n",
       "     'resource_type': None,\n",
       "     'size': 9610,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/abe34d5b-89dc-45a6-ace3-edef03a98e25/resource/5ab0c3ad-0086-4fae-b206-3954a4b147cd/download/2017-12-21_vnstat-export-br0.xml',\n",
       "     'url_type': ''},\n",
       "    {'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2022-03-16T09:29:08.778126',\n",
       "     'datastore_active': False,\n",
       "     'description': 'This is a JSON file published by Leibniz University Hannover. ',\n",
       "     'format': 'JSON',\n",
       "     'hash': '',\n",
       "     'id': 'e3e6e6ef-e356-4005-af2e-2e8538ed3f58',\n",
       "     'last_modified': '2022-03-16T09:29:08.762912',\n",
       "     'metadata_modified': '2022-06-13T06:57:33.204803',\n",
       "     'mimetype': 'application/json',\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'JSON Data Example',\n",
       "     'package_id': 'd5d29173-addc-4e4d-af7b-59e3b147c817',\n",
       "     'position': 2,\n",
       "     'resource_type': None,\n",
       "     'size': 6211,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/abe34d5b-89dc-45a6-ace3-edef03a98e25/resource/8b27c588-9ca1-451f-8d22-86df37613355/download/2017-12-21_vnstat-export-br0.json',\n",
       "     'url_type': ''},\n",
       "    {'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2022-03-16T09:30:52.528628',\n",
       "     'datastore_active': False,\n",
       "     'description': 'This is a RDF file example generated from data published by Leibniz University Hannover. ',\n",
       "     'format': 'RDF',\n",
       "     'hash': '',\n",
       "     'id': '5a139ebc-3076-47a5-a7d5-9b3c6505dd9e',\n",
       "     'last_modified': '2022-03-16T09:30:52.511290',\n",
       "     'metadata_modified': '2022-06-13T06:57:58.324036',\n",
       "     'mimetype': 'application/rdf+xml',\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'RDF Data Example',\n",
       "     'package_id': 'd5d29173-addc-4e4d-af7b-59e3b147c817',\n",
       "     'position': 3,\n",
       "     'resource_type': None,\n",
       "     'size': 6203,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/abe34d5b-89dc-45a6-ace3-edef03a98e25/resource/75d19a29-b1fe-4327-b09c-dcf8b828df9c/download/luh-beispiel-netzwerkmessdaten.rdf',\n",
       "     'url_type': ''},\n",
       "    {'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2022-03-16T09:33:30.427169',\n",
       "     'datastore_active': False,\n",
       "     'description': 'This is a XLSX file published by Leibniz University Hannover. ',\n",
       "     'format': 'XLSX',\n",
       "     'hash': '',\n",
       "     'id': '05fcf73d-3fbf-4dec-9ea4-3fc9537ffa43',\n",
       "     'last_modified': '2022-03-16T09:33:30.410841',\n",
       "     'metadata_modified': '2022-06-13T06:58:28.762699',\n",
       "     'mimetype': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'XLSX Data Example',\n",
       "     'package_id': 'd5d29173-addc-4e4d-af7b-59e3b147c817',\n",
       "     'position': 4,\n",
       "     'resource_type': None,\n",
       "     'size': 32536,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/abe34d5b-89dc-45a6-ace3-edef03a98e25/resource/4a8809e3-7452-4e4a-9108-223c6bdb7102/download/jcdl-2019-dils-2019-papers-orkg-overview.xlsx',\n",
       "     'url_type': ''},\n",
       "    {'cache_last_updated': None,\n",
       "     'cache_url': None,\n",
       "     'created': '2022-03-16T09:36:28.626475',\n",
       "     'datastore_active': False,\n",
       "     'description': 'This is just an example file of the format for visualization.',\n",
       "     'format': 'ODS',\n",
       "     'hash': '',\n",
       "     'id': '047da174-2caa-45db-bc43-36fd3523ee30',\n",
       "     'last_modified': None,\n",
       "     'metadata_modified': '2022-06-13T06:58:55.028252',\n",
       "     'mimetype': 'application/vnd.oasis.opendocument.spreadsheet',\n",
       "     'mimetype_inner': None,\n",
       "     'name': 'Open Document Spreadsheet (ODS) Example',\n",
       "     'package_id': 'd5d29173-addc-4e4d-af7b-59e3b147c817',\n",
       "     'position': 5,\n",
       "     'resource_type': None,\n",
       "     'size': None,\n",
       "     'state': 'active',\n",
       "     'url': 'https://service.tib.eu/ldmservice/dataset/abe34d5b-89dc-45a6-ace3-edef03a98e25/resource/6fe73326-888d-4190-9a5d-09e65cd5d58b/download/sample1.ods',\n",
       "     'url_type': ''}],\n",
       "   'tags': [],\n",
       "   'groups': [],\n",
       "   'relationships_as_subject': [],\n",
       "   'relationships_as_object': []}],\n",
       " 'sort': 'organization asc,title_string asc',\n",
       " 'search_facets': {}}"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "search_result = response.json().get('result')\n",
    "search_result"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8d3a8a4",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 6: Setting user token to perform privileged operations (Example: Create Organization)</u></h3>\n",
    "\n",
    "###### Create a new Organization. Only system's administrators are allowed to create Organizations, for that a user token for a valid system administrator user should be provided to the API.\n",
    "\n",
    "##### The token can be created in LDM into User's accound details, tab \"API Tokens\" and must be copied and saved at the moment of creation. After that is not visible any more.\n",
    "\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/2a68ba5b-e5a2-4a33-8e1e-2420cae4b121/download/token_creation.png\" width=80% />\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bfdf4d70",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/organization_create\n",
      "Method: POST\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"organization_create\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: POST\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "de4bd2e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "org_dict = {\n",
    "        \"description\": \"API Example Organization\",\n",
    "        \"image_url\": \"https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/gfx/logos/tib-full.svg\",\n",
    "        \"name\": \"api_example1\",\n",
    "        }\n",
    "try:\n",
    "    response = requests.post(API_URL, data = org_dict)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "071975b4",
   "metadata": {},
   "source": [
    "\n",
    "##### Showing results (Must fail!):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "811b28f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'help': 'http://localhost:5000/api/3/action/help_show?name=organization_create',\n",
       " 'error': {'__type': 'Authorization Error',\n",
       "  'message': 'Access denied: Action organization_create requires an authenticated user'},\n",
       " 'success': False}"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This operation should fall because we are trying \n",
    "# to create an Organization withot Authorization\n",
    "organization_create_result = response.json()\n",
    "organization_create_result"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "605d25f9",
   "metadata": {},
   "source": [
    "\n",
    "##### Authorizing the user with token:\n",
    "###### Notice: this code can't be run live due to security. The authorization token can't be shared. Selectable code bellow."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee3345d9",
   "metadata": {},
   "source": [
    "\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/b12d4dab-45ae-4ef3-938c-e12096652e00/download/create_org1.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/ce5861dd-7e85-4d17-b22c-2d1a01beb05c/download/create_org2.png\"/>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "668b5085",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here you have the code selectable!\n",
    "\"\"\"\n",
    "user_token = 'zQ2ODgxOX0.5bABYIL-_46nLy64m5amx8GB25lqSYi5SLGYRmGDzi8'\n",
    "\n",
    "try:\n",
    "    response = requests.post(API_URL, data = org_dict, headers={'Authorization': user_token})\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n",
    "\n",
    "organization_create_result = response.json()\n",
    "organization_create_result\n",
    "\"\"\"\n",
    "\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92badf48",
   "metadata": {},
   "source": [
    "\n",
    "##### The Organization just created in LDM\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/dbdfa7bd-f874-4053-8f32-adf7c4272929/download/organization_created.png\" width=80% />\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "003c9439",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 7: Create Dataset</u></h3>\n",
    "\n",
    "###### Create a new Dataset. Only authorized users are allowed to create Datasets, for that a user token for a valid user should be provided to the API.\n",
    "\n",
    "##### Notice: The token can be created in LDM into User's accound details, tab \"API Tokens\" and must be copied and saved at the moment of creation. After that is not visible any more.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "314b11c5",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/package_create\n",
      "Method: POST\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"package_create\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: POST\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "6ea52003",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Notice: we are creating a private dataset for the user identified by the token\n",
    "dataset_dict = {\n",
    "            \"name\": \"api_examples_dataset\",\n",
    "            \"title\": \"API Examples Dataset\",\n",
    "            \"private\": True,\n",
    "            \"author\": \"John Doe\",\n",
    "            \"author_email\": \"johndoe@mail.com\",\n",
    "            \"notes\": \"This is the description of the Dataset\",\n",
    "            \"owner_org\": \"tib\"}\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e257c38",
   "metadata": {},
   "source": [
    "###### Notice: this code can't be run live due to security. The authorization token can't be shared. Selectable code bellow.\n",
    "\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/38c7526e-8b57-494a-a8f4-fc4e6f40fa13/download/create_dataset1.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/622ea2c9-e960-40f4-9514-ced3232c5e7d/download/create_dataset2.png\"/>\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/c81e916b-a5d9-4e2a-9f4e-06bb4d8e77a9/download/create_dataset3.png\" />\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8ad4eb02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here you have the code selectable!\n",
    "\"\"\"\n",
    "user_token = 'iqoULnP29L8fIhD94TyZ0gtnlxQ'\n",
    "\n",
    "try:\n",
    "    response = requests.post(API_URL, data = dataset_dict, headers={'Authorization': user_token})\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n",
    "\n",
    "dataset_create_result = response.json()\n",
    "dataset_create_result\n",
    "\"\"\"\n",
    "\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0850f13a",
   "metadata": {},
   "source": [
    "\n",
    "##### The Dataset just created in LDM\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/88d7e54d-e4c1-406e-a10f-d510d3bfa435/download/dataset_created.png\" width=80% />\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91d2db7c",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 8: Show Private Dataset's data</u></h3>\n",
    "\n",
    "###### List metadata from a particular private Dataset by its name (ID).  We are using the same API call used in \"Example 3\", but now using a valid user token for showing private Datasets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "913be7f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/package_show\n",
      "Method: GET\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"package_show\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: GET\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "6af7dfe9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'api_examples_dataset'"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We use the Dataset created in Example 7\n",
    "dataset_ID = \"api_examples_dataset\"\n",
    "dataset_ID"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a9ac81fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {\"id\": dataset_ID}\n",
    "try:\n",
    "    response = requests.get(API_URL, params = params)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24633f73",
   "metadata": {},
   "source": [
    "\n",
    "##### Showing results (Must fail): Without the authorization token the Dataset is not accessible"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "6031e3ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'help': 'http://localhost:5000/api/3/action/help_show?name=package_show',\n",
       " 'error': {'__type': 'Not Found Error', 'message': 'Not found'},\n",
       " 'success': False}"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset = response.json()\n",
    "dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b68b76ab",
   "metadata": {},
   "source": [
    "\n",
    "##### Now defining the user token.\n",
    "###### Notice: this code can't be run live due to security. The authorization token can't be shared. Selectable code bellow.\n",
    "\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/f4a02fc6-f426-4be8-9a19-e939e7809af1/download/show_private_dataset1.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/53dd67ec-e720-4dfd-9b05-4cce7ae37b88/download/show_private_dataset2.png\" />"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "23dd8a96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here you have the code selectable!\n",
    "\"\"\"\n",
    "user_token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxTWxXZ0lVeGtoX3Q3TzhkYi0zM0hHal96RUo0eFFIY0l1N2Y0enF3a0Jyai13THhLSm9CaDZnY0swU3ZnS0FjSW5aVkdWcUVLVmlyLXM2OCIsImlhdCI6MTY2NzQ3OTc1N30.WgmJ4YX5Kp553AtJ1OHgaxzeGIPBY3owypg_o9bserE'\n",
    "\n",
    "params = {\"id\": dataset_ID}\n",
    "try:\n",
    "    response = requests.get(API_URL, params = params, headers={'Authorization': user_token})\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n",
    "\n",
    "dataset = response.json().get('result')\n",
    "dataset\n",
    "\"\"\"\n",
    "\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73787e78",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 9: Create User</u></h3>\n",
    "\n",
    "###### Create a new User. Only authorized users are allowed to create Users, for that a user token for a valid authorized user should be provided to the API.\n",
    "\n",
    "##### The token can be created in LDM into User's accound details, tab \"API Tokens\" and must be copied and saved at the moment of creation. After that is not visible any more.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9270e5ed",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/user_create\n",
      "Method: POST\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"user_create\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: POST\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d7ac626e",
   "metadata": {},
   "outputs": [],
   "source": [
    "user_dict = {\n",
    "        \"name\": \"john_doe\",\n",
    "        \"email\": \"johndoe@mail.com\",\n",
    "        \"password\": \"password123\",\n",
    "        \"fullname\": \"John Doe\"\n",
    "        }\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a823141",
   "metadata": {},
   "source": [
    "\n",
    "##### Showing results:\n",
    "###### Notice: this code can't be run live due to security. The authorization token can't be shared. Selectable code bellow.\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/59f35bf0-9cc5-425e-8cac-14c9112a111a/download/create_user.png\" />"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "0dd62319",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here you have the code selectable!\n",
    "\"\"\"\n",
    "user_token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxTWxXZ0lVeGtoX3Q3TzhkYi0zM0hHal96RUo0eFFIY0l1N2Y0enF3a0Jyai13THhLSm9CaDZnY0swU3ZnS0FjSW5aVkdWcUVLVmlyLXM2OCIsImlhdCI6MTY2NzQ3OTc1N30.WgmJ4YX5Kp553AtJ1OHgaxzeGIPBY3owypg_o9bserE'\n",
    "\n",
    "try:\n",
    "    response = requests.post(API_URL, data = user_dict, headers={'Authorization': user_token})\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n",
    "    \n",
    "user_create_result = response.json()\n",
    "user_create_result\n",
    "\"\"\"\n",
    "\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6144537",
   "metadata": {},
   "source": [
    "\n",
    "##### The User just created in LDM\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/6620d1c8-971d-490e-99c2-0a5749a2ae86/download/user_created.png\" width=80% />\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c791609",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 10: Upload a Dataset</u></h3>\n",
    "\n",
    "###### On this context \"Upload a Dataset\" means the insertion of a new Dataset with metadata and resources into LDM using the API. \n",
    "###### The procedure is similar to \"Example 7: Create Dataset\" but in this example more details are explained.\n",
    "###### Only authorized users are allowed to create Datasets, for that a user token for a valid user should be provided to the API.\n",
    "\n",
    "##### Notice: The token can be created in LDM into User's accound details, tab \"API Tokens\" and must be copied and saved at the moment of creation. After that is not visible any more.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "d11a3879",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/package_create\n",
      "Method: POST\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"package_create\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: POST\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a0c07b5",
   "metadata": {},
   "source": [
    "###### This is a basic Dataset dictionary with the mandatory metadata needed for the insertion, but  it can be extended adding more metadata. The result of the API operation \"package_show\" (see response in \"Example 4: Show Dataset's data\") can be used as referece for the addition of more fields to the dictionary.\n",
    "\n",
    "##### The metadata fields are defined in LDM's metadata schema and only fields listed in \"package_show\" operation are allowed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "27a06b7e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Notice: we are creating a private dataset for the user identified later by the token\n",
    "# The following are the required fields\n",
    "\n",
    "dataset_dict = {\n",
    "            \"name\": \"api-examples-dataset-2\",\n",
    "            \"title\": \"API Examples Dataset-2\",\n",
    "            \"private\": True,\n",
    "            \"author\": \"John Doe\",\n",
    "            \"author_email\": \"johndoe@mail.com\",\n",
    "            \"notes\": \"This is the description of the Dataset\",\n",
    "            \"owner_org\": \"api_example1\",\n",
    "            }\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb07d195",
   "metadata": {},
   "source": [
    "#### <u>Name:</u>\n",
    "##### Notice the name should be created parsing the \"title\" to lowercase and replacing whitespaces with scores (-).\n",
    "<p style=\"color:#d94c2e;\">\"name\": \"api-examples-dataset-2\"</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef9829a6",
   "metadata": {},
   "source": [
    "#### <u>Public or Private:</u>\n",
    "##### Notice the Dataset could be created as public or private for the user authorizing the operation setting \"private\" to False or True respectivelly.  On this example the Dataset is \"private\".\n",
    "<p style=\"color:#d94c2e;\">\"private\": <span style=\"color: #429450; font-weight:bold\">True</span></p>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "418a25dd",
   "metadata": {},
   "source": [
    "#### <u>Owner Organization:</u>\n",
    "##### Notice the Dataset created will bellong to the organization descripted in \"owner_org\" by the Organization's \"ID\" or Organization's \"name\" (see response in \"Example 3: Show Organization's data\" for reference).\n",
    "\n",
    "##### The Organization must already exists in LDM. Otherwise should be created following the instructions on \"Example 6: Setting user token to perform privileged operations (Example: Create Organization) before inserting the Dataset\".\n",
    "<p style=\"color:#d94c2e;\">\"owner_org\": \"api-example-organization\"</p>\n",
    "\n",
    "In case the Organization doesn't exists and is referenced in a \"package_create\" operation the API will notice an error:\n",
    "\n",
    "{'help': 'http://localhost:5000/api/3/action/help_show?name=package_create',\n",
    " 'error': {'owner_org': ['Organization does not exist'],\n",
    "  '__type': 'Validation Error'},\n",
    " 'success': False}\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7f3faee",
   "metadata": {},
   "source": [
    "\n",
    "##### <u>Inserting the New Dataset:<u/>\n",
    "###### Notice: this code can't be run live due to security. The authorization token can't be shared. Selectable code bellow.\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/841d652b-4fd5-4c24-ac11-62381b0dead3/download/upload_dataset1.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/d45b05ce-c776-432b-a37d-23014c3f994c/download/upload_dataset2.png\" />"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "706420e1",
   "metadata": {},
   "source": [
    "\n",
    "##### The Dataset just created in LDM\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/55b0bfee-3b7d-4595-8f0e-a912a4178c61/download/upload_dataset3.png\" width=80% />\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "8de23bf8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here you have the code above selectable!\n",
    "\"\"\"\n",
    "user_token = 'eyJ0eXAiOiJKV1QiLCJhbGc_qPCyiALfgFGf0FSg'\n",
    "\n",
    "try:\n",
    "    response = requests.post(API_URL, data = dataset_dict, headers={'Authorization': user_token})\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n",
    "\n",
    "dataset_create_result = response.json()\n",
    "dataset_create_result\n",
    "\"\"\"\n",
    "\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37b2f8a7",
   "metadata": {},
   "source": [
    "#### <u>Adding resources to the Dataset:</u>\n",
    "##### Notice in the result of the previous step the fields \"id\" and \"name\" of the Dataset just created. Those fields are going to be used in the following examples inserting two resources to the Dataset.\n",
    "<p style=\"color:#d94c2e;\">\"id\": \"ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b\"</p>\n",
    "<p style=\"color:#d94c2e;\">\"name\": \"api-examples-dataset-2\"</p>\n",
    "\n",
    "##### The API call for adding resources:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "014b931c",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/resource_create\n",
      "Method: POST\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"resource_create\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: POST\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ca2af86",
   "metadata": {},
   "source": [
    "##### <u>Adding the first resource</u>:\n",
    "\n",
    "##### The Dataset in wich the Resource will be inserted is defined by Dataset's \"id\" .\n",
    "##### With \"url_type\" empty the resource will be inserted as a link to an URL defined in \"url\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "2240ef80",
   "metadata": {},
   "outputs": [],
   "source": [
    "resource_dict = {\"package_id\": \"ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b\",\n",
    "                 \"description\": \"This is a sample resource for demonstration purposes.\", \n",
    "                 \"format\": \"svg\", \n",
    "                 \"name\": \"TIB logo\", \n",
    "                 \"url\": \"https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/gfx/logos/tib-full.svg\",\n",
    "                 \"url_type\": \"\"}\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e09c86dd",
   "metadata": {},
   "source": [
    "\n",
    "##### <u>Inserting the New Resource:<u/>\n",
    "###### Notice: this code can't be run live due to security. The authorization token can't be shared. Selectable code bellow.\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/934e411e-7b8f-4d78-a5a2-4de2fb7301e2/download/upload_dataset4.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/15c0434a-a3ba-49c2-83d3-a30c2a8deff5/download/upload_dataset5.png\" />"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0a14c6b",
   "metadata": {},
   "source": [
    "##### <u>Adding the seccond resource</u>:\n",
    "\n",
    "##### The Dataset in wich the Resource will be inserted is defined by Dataset's \"name\" .\n",
    "##### With \"url_type\" as \"upload\" the resource will be inserted as a file uploaded into the dataset and copied from \"url\".\n",
    "##### In this case the file must be sent in the request to the API as \"multipart/form-data\". On Python this can be made sending the opened file as \"file\" parameter to the request call as we can see bellow:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "f64e78a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "resource_dict = {\"package_id\": \"api-examples-dataset-2\",\n",
    "                 \"description\": \"This is a seccond sample resource for demonstration purposes.\", \n",
    "                 \"format\": \"svg\", \n",
    "                 \"name\": \"TIB logo - Uploaded\", \n",
    "                 \"url\": \"https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/gfx/logos/tib-full.svg\",\n",
    "                 \"url_type\": \"upload\"}\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d0bf6b9",
   "metadata": {},
   "source": [
    "\n",
    "##### <u>Inserting the New Resource:<u/>\n",
    "###### Notice: this code can't be run live due to security. The authorization token can't be shared. Selectable code bellow.\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/a087cd32-70ee-458f-96f8-001faf4cacb9/download/upload_dataset9.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/89b0bd98-32e0-424c-b077-5a022ec76d78/download/upload_dataset10.png\" />"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "190fbd5c",
   "metadata": {},
   "source": [
    "\n",
    "##### The resourses added into the Dataset:\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/bbfb6eb3-ec9a-49c1-bfc2-f4d7c8a1a014/download/upload_dataset6.png\" width=80% />\n",
    "\n",
    "##### The first resourse is of type URL:\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/1e479203-d713-4943-b42f-2bcc8c71dd1f/download/upload_dataset7.png\" width=80% />\n",
    "\n",
    "##### The seccond resourse is of type FILE:\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/a8782a4c-c8b8-4ff8-9afe-160bf573540e/download/upload_dataset8.png\" width=80% />\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "59303b11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here you have the code above selectable!\n",
    "\"\"\"\n",
    "from urllib.request import urlopen\n",
    "\n",
    "user_token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJxUkdrRExJdy00VU5CVTdJbklzeVBsanNmOHdwYjRQQWRSdmpnUUtDN29MMXYxUEZBNkN6Wm0yazRCYndXTGlIVEpfMzlGZFRZM2dyME5ZMiIsImlhdCI6MTY3MDMyMzg2NH0.nt3LTqwr8_6rwoDmwul4swGqKQ_qPCyiALfgFGf0FSg'\n",
    "\n",
    "files = [('upload', urlopen(resource_dict['url']))]\n",
    "          \n",
    "try:\n",
    "    response = requests.post(API_URL, data = resource_dict, headers={'Authorization': user_token}, files=files)\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n",
    "\n",
    "resource_insert_result = response.json()\n",
    "resource_insert_result\n",
    "\"\"\"\n",
    "\"\"\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c4661e7",
   "metadata": {},
   "source": [
    "---\n",
    "<h3 style=\"color:#d94c2e;\"><u>Example 11: Download a Dataset</u></h3>\n",
    "\n",
    "###### On this context \"Download a Dataset\" means obtaining the Dataset's metadata and Resource's metadata including the URLs for downloading the files using a web browser or programming code.\n",
    "###### The procedure is similar to \"Example 4: Show Dataset's data\" but in this example more details are explained.\n",
    "###### Only authorized users are allowed to access private Datasets, for that a user token for a valid user should be provided to the API in that case.\n",
    "\n",
    "##### Notice: The token can be created in LDM into User's accound details, tab \"API Tokens\" and must be copied and saved at the moment of creation. After that is not visible any more.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "ddbbae51",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "API URL is:  http://localhost:5000/api/3/action/package_show\n",
      "Method: GET\n"
     ]
    }
   ],
   "source": [
    "API_URL = API_Base_URL + \"package_show\"\n",
    "print(\"API URL is: \", API_URL)\n",
    "print(\"Method: GET\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c67cd76",
   "metadata": {},
   "source": [
    "###### In this example the Dataset created in previous example \"Example 10: Upload a Dataset\" is used:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "d2e022a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'api-examples-dataset-2'"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset_ID = \"api-examples-dataset-2\"\n",
    "dataset_ID"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e38186b3",
   "metadata": {},
   "source": [
    "\n",
    "##### <u>Accessing Dataset's metadata:<u/>\n",
    "###### Notice: this code can't be run live due to security. The authorization token can't be shared. Selectable code bellow.\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/99d953ae-3e3d-4dee-b5e9-656746a215f1/download/download_dataset1.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/4fe20c68-ecb6-4f8a-82c4-13eb43dace4d/download/download_dataset2.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/54a42c73-0fa4-45e8-a699-fd9631ad0155/download/download_dataset3.png\" />\n",
    "<img src=\"http://localhost:5000/dataset/69008361-5ce3-4662-aab6-2132bebd818c/resource/53c4f88b-8316-427a-bf54-e7c839ef4e4e/download/download_dataset4.png\" />\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e645593",
   "metadata": {},
   "source": [
    "\n",
    "##### This is the response above:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "970cbc6a",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset_result = {'author': 'John Doe',\n",
    " 'author_email': 'johndoe@mail.com',\n",
    " 'creator_user_id': '17755db4-395a-4b3b-ac09-e8e3484ca700',\n",
    " 'id': 'ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b',\n",
    " 'isopen': False,\n",
    " 'license_title': None,\n",
    " 'metadata_created': '2022-12-06T11:38:41.255770',\n",
    " 'metadata_modified': '2022-12-06T12:49:02.802646',\n",
    " 'name': 'api-examples-dataset-2',\n",
    " 'notes': 'This is the description of the Dataset',\n",
    " 'num_resources': 2,\n",
    " 'num_tags': 0,\n",
    " 'organization': {'id': '418c44ac-f36a-498d-bed8-7d049b2a22e4',\n",
    "  'name': 'api_example1',\n",
    "  'title': '',\n",
    "  'type': 'organization',\n",
    "  'description': 'API Example Organization',\n",
    "  'image_url': 'https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/gfx/logos/tib-full.svg',\n",
    "  'created': '2022-11-03T10:12:29.654384',\n",
    "  'is_organization': True,\n",
    "  'approval_status': 'approved',\n",
    "  'state': 'active'},\n",
    " 'owner_org': '418c44ac-f36a-498d-bed8-7d049b2a22e4',\n",
    " 'private': True,\n",
    " 'services_used_list': '',\n",
    " 'state': 'active',\n",
    " 'title': 'API Examples Dataset-2',\n",
    " 'type': 'dataset',\n",
    " 'resources': [{'cache_last_updated': None,\n",
    "   'cache_url': None,\n",
    "   'created': '2022-12-06T12:35:39.686019',\n",
    "   'description': 'This is a sample resource for demonstration purposes.',\n",
    "   'format': 'SVG',\n",
    "   'hash': '',\n",
    "   'id': '26bd95b3-48d0-46ed-9cd5-40316b5e5110',\n",
    "   'last_modified': None,\n",
    "   'metadata_modified': '2022-12-06T12:35:39.682249',\n",
    "   'mimetype': 'image/svg+xml',\n",
    "   'mimetype_inner': None,\n",
    "   'name': 'TIB logo',\n",
    "   'package_id': 'ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b',\n",
    "   'position': 0,\n",
    "   'resource_type': None,\n",
    "   'size': None,\n",
    "   'state': 'active',\n",
    "   'url': 'https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/gfx/logos/tib-full.svg',\n",
    "   'url_type': ''},\n",
    "  {'cache_last_updated': None,\n",
    "   'cache_url': None,\n",
    "   'created': '2022-12-06T12:48:13.212965',\n",
    "   'description': 'This is a seccond sample resource for demonstration purposes.',\n",
    "   'format': 'SVG',\n",
    "   'hash': '',\n",
    "   'id': 'd28524d2-49ca-4c9d-a4dd-4b19bb03db35',\n",
    "   'last_modified': None,\n",
    "   'metadata_modified': '2022-12-06T12:48:13.207682',\n",
    "   'mimetype': 'image/svg+xml',\n",
    "   'mimetype_inner': None,\n",
    "   'name': 'TIB logo - Uploaded',\n",
    "   'package_id': 'ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b',\n",
    "   'position': 1,\n",
    "   'resource_type': None,\n",
    "   'size': None,\n",
    "   'state': 'active',\n",
    "   'url': 'http://localhost:5000/dataset/ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b/resource/d28524d2-49ca-4c9d-a4dd-4b19bb03db35/download/tib-full.svg',\n",
    "   'url_type': 'upload'}],\n",
    " 'tags': [],\n",
    " 'groups': [],\n",
    " 'relationships_as_subject': [],\n",
    " 'relationships_as_object': [],\n",
    " 'doi': '10.23680/hzpdhljp',\n",
    " 'doi_status': False,\n",
    " 'domain': 'localhost:5000',\n",
    " 'doi_date_published': None,\n",
    " 'doi_publisher': 'TIB'}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "915cdd71",
   "metadata": {},
   "source": [
    "\n",
    "##### All metadata is containded in the dictionary, including Resource's metadata."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "060cd2e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of resourses:  2\n",
      "Resource 1 metadata:\n",
      "{'cache_last_updated': None,\n",
      " 'cache_url': None,\n",
      " 'created': '2022-12-06T12:35:39.686019',\n",
      " 'description': 'This is a sample resource for demonstration purposes.',\n",
      " 'format': 'SVG',\n",
      " 'hash': '',\n",
      " 'id': '26bd95b3-48d0-46ed-9cd5-40316b5e5110',\n",
      " 'last_modified': None,\n",
      " 'metadata_modified': '2022-12-06T12:35:39.682249',\n",
      " 'mimetype': 'image/svg+xml',\n",
      " 'mimetype_inner': None,\n",
      " 'name': 'TIB logo',\n",
      " 'package_id': 'ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b',\n",
      " 'position': 0,\n",
      " 'resource_type': None,\n",
      " 'size': None,\n",
      " 'state': 'active',\n",
      " 'url': 'https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/gfx/logos/tib-full.svg',\n",
      " 'url_type': ''}\n",
      "Resource 2 metadata:\n",
      "{'cache_last_updated': None,\n",
      " 'cache_url': None,\n",
      " 'created': '2022-12-06T12:48:13.212965',\n",
      " 'description': 'This is a seccond sample resource for demonstration purposes.',\n",
      " 'format': 'SVG',\n",
      " 'hash': '',\n",
      " 'id': 'd28524d2-49ca-4c9d-a4dd-4b19bb03db35',\n",
      " 'last_modified': None,\n",
      " 'metadata_modified': '2022-12-06T12:48:13.207682',\n",
      " 'mimetype': 'image/svg+xml',\n",
      " 'mimetype_inner': None,\n",
      " 'name': 'TIB logo - Uploaded',\n",
      " 'package_id': 'ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b',\n",
      " 'position': 1,\n",
      " 'resource_type': None,\n",
      " 'size': None,\n",
      " 'state': 'active',\n",
      " 'url': 'http://localhost:5000/dataset/ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b/resource/d28524d2-49ca-4c9d-a4dd-4b19bb03db35/download/tib-full.svg',\n",
      " 'url_type': 'upload'}\n"
     ]
    }
   ],
   "source": [
    "import pprint\n",
    "\n",
    "# Amount of resources\n",
    "print(\"Number of resourses: \", dataset_result['num_resources'])\n",
    "\n",
    "# Resource 1 metadata\n",
    "print(\"Resource 1 metadata:\")\n",
    "pprint.pprint(dataset_result['resources'][0])\n",
    "\n",
    "# Resource 1 metadata\n",
    "print(\"Resource 2 metadata:\")\n",
    "pprint.pprint(dataset_result['resources'][1])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39d0ac61",
   "metadata": {},
   "source": [
    "\n",
    "##### Resourse's URLs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "51621d8b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resource 1 URL:\n",
      "https://www.tib.eu/typo3conf/ext/tib_tmpl_bootstrap/Resources/Public/gfx/logos/tib-full.svg\n",
      "Resource 2 URL:\n",
      "http://localhost:5000/dataset/ab2c9d5d-0109-4c3a-a61a-34d0a1dd022b/resource/d28524d2-49ca-4c9d-a4dd-4b19bb03db35/download/tib-full.svg\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Resource 1 metadata\n",
    "print(\"Resource 1 URL:\")\n",
    "print(dataset_result['resources'][0][\"url\"])\n",
    "\n",
    "# Resource 2 metadata\n",
    "print(\"Resource 2 URL:\")\n",
    "print(dataset_result['resources'][1][\"url\"])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "ad1c85c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here you have the code above selectable!\n",
    "\"\"\"\n",
    "params = {\"id\": dataset_ID}\n",
    "user_token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJxUkdrRExJdy00VU5CVTdJbklzeVBsanNmOHdwYjRQQWRSdmpnUUtDN29MMXYxUEZBNkN6Wm0yazRCYndXTGlIVEpfMzlGZFRZM2dyME5ZMiIsImlhdCI6MTY3MDMyMzg2NH0.nt3LTqwr8_6rwoDmwul4swGqKQ_qPCyiALfgFGf0FSg'\n",
    "\n",
    "try:\n",
    "    response = requests.get(API_URL, params = params, headers={'Authorization': user_token})\n",
    "except requests.exceptions.RequestException as e:\n",
    "    print(\"ERROR ACCESSING API: \", API_URL, e.__str__())\n",
    "\"\"\"\n",
    "\"\""
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
